[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 48 products, 13 sources, 3 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/Base.scala, ${BASE}/src/main/scala/ConstructDeptree.scala, ${BASE}/src/main/scala/AntiUnification.scala, ${BASE}/src/main/scala/NLParser.scala, ${BASE}/src/main/scala/Main.scala, ${BASE}/src/main/scala/OutputParse.scala, ${BASE}/src/main/scala/Terms.scala, ${BASE}/src/main/scala/ExtractRule.scala, ${BASE}/src/main/scala/Convert.scala, ${BASE}/src/main/scala/showTree.scala, ${BASE}/src/main/scala/Contree.scala, ${BASE}/src/main/scala/Deptree.scala, ${BASE}/src/main/scala/ParseHtml.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/Main.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Main, main2)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Main, main2)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Main, main2[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /mnt/c/Users/ayaka/Desktop/nlpTest/LAL-Parser/scala3_sbt/target/scala-3.1.0/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: /home/ayaka/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-sbt-bridge/3.1.0/scala3-sbt-bridge-3.1.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 39df29ac for Scala Compiler version 3.1.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/ayaka/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.1.0/scala3-library_3-3.1.0.jar:/home/ayaka/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.6/scala-library-2.13.6.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/mnt/c/Users/ayaka/Desktop/nlpTest/LAL-Parser/scala3_sbt/target/scala-3.1.0/classes:/home/ayaka/.cache/coursier/v1/https/repo1.maven.org/maven2/org/jsoup/jsoup/1.9.2/jsoup-1.9.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.3775947 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Main[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Main,ModifiedNames(changes = UsedName(keisikika,[Default]), UsedName(aaa,[Default]), UsedName(main2,[Default]))) invalidates 1 classes due to The Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(keisikika,[Default]), UsedName(aaa,[Default]), UsedName(main2,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main2[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main2,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(eq,[Default]), UsedName(Object;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(main2;init;,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(main2,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The main2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(eq,[Default]), UsedName(Object;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(main2;init;,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(main2,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(main,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(main2)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from keisikika...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: keisikika[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(keisikika)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(keisikika,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(eq,[Default]), UsedName(Object;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(keisikika;init;,[Default]), UsedName(clone,[Default]), UsedName(keisikika,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(main,[Default]))) invalidates 1 classes due to The keisikika has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(eq,[Default]), UsedName(Object;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(keisikika;init;,[Default]), UsedName(clone,[Default]), UsedName(keisikika,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(main,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(keisikika)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
