switch(obl(Data_state(case(to),det(the))))
set(obj(flag(nmod:poss(z0),compound(force-quirks))),obl(on(case(to))))
create(obj(token(det(a),z0,z1)))
reconsume(nmod(After_attribute_name_state(case(in),det(the))))
reconsume(nmod(Script_data_state(case(in),det(the))))
multiply(obj(code(det(the),compound(character),compound(reference))),obl(z0))
consume(obj(character(det(the),amod(next),compound(input))))
ignore(obj(character(det(the))))
append(obj(character(det(the),amod(current),compound(input))),obl(z0))
error(nsubj(this),cop(is),det(z0),amod(z1),compound(parse))
emit(obj(token(det(an),amod(end-of-file))))
flush(obj(points(compound(code),acl(consumed(obl(reference(case(as),det(a),compound(character))))))))
treat(advmod(otherwise),punct(,),obj(it),obl(entry(case(as),case(per),det(the),compound(anything(punct("),amod(else),punct("))),advmod(below))))
