(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Character_reference_state))))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Tag_open_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (TO to) (NP (DT the) (NNP RCDATA_state)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Character_reference_state))))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP RCDATA_less_than_sign_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP RAWTEXT_less_than_sign_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_less_than_sign_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Markup_declaration_open_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP End_tag_open_state)))) (. .))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN start) (NN tag) (NN token))) (CC and) (VP (VB set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Tag_name_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_question_mark_instead_of_tag_name) (NN parse) (NN error))) (. .) (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NN data)) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string)))))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_comment_state))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_before_tag_name) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT an) (JJ end_of_file) (NN token))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ invalid_first_character_of_tag_name) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Data_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VBD set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Tag_name_state))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_end_tag_name) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_before_tag_name) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)) (CC and) (NP (DT an) (JJ end_of_file) (NN token))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ invalid_first_character_of_tag_name) (NN parse) (NN error))) (. .) (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NN data)) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string)))))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_comment_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP RCDATA_end_tag_open_state))))) (. .))
(S (VP (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VBD set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA_end_tag_name_state))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)) (, ,) (CC and) (NP (NP (DT a) (NN character) (NN token)) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (DT the) (JJ temporary) (NN buffer))))))) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (TO to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RCDATA_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP RAWTEXT_end_tag_open_state))))) (. .))
(S (VP (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RAWTEXT_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VBD set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RAWTEXT_end_tag_name_state))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RAWTEXT_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)) (, ,) (CC and) (NP (NP (DT a) (NN character) (NN token)) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (DT the) (JJ temporary) (NN buffer))))))) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (TO to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP RAWTEXT_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_end_tag_open_state))))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escape_start_state)))) (. .) (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT a) (NNP U+0021) (NNP EXCLAMATION) (NNP MARK) (NN character) (NN token))))) (. .))
(S (VP (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VBD set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_end_tag_name_state))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)) (, ,) (CC and) (NP (NP (DT a) (NN character) (NN token)) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (DT the) (JJ temporary) (NN buffer))))))) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (TO to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escape_start_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_dash_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_less_than_sign_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_dash_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_less_than_sign_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state))))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_less_than_sign_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003E) (NNP GREATER_THAN) (NNP SIGN) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state))))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_end_tag_open_state))))) (. .))
(S (VP (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_double_escape_start_state))))) (. .))
(S (VP (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_escaped_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NN end) (NN tag) (NN token))) (, ,) (VP (VBD set) (NP (PRP$ its) (NN tag) (NN name)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_escaped_end_tag_name_state))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (CC and) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_escaped_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (NX (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ current) (NN end) (NN tag) (NN token)) (VP (VBZ is) (NP (DT an) (JJ appropriate) (NN end) (NN tag) (NN token))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (CC and) (VP (VB emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (S (ADVP (RB Otherwise)) (, ,) (VP (VB treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below)))))))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN tag) (NN token) (POS 's)) (NN tag) (NN name)))) (. .) (VP (VBP Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .))
(S (VP (VP (VB Emit) (NP (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)) (, ,) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)) (, ,) (CC and) (NP (NP (DT a) (NN character) (NN token)) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (NP (DT the) (NNS characters)) (PP (IN in) (NP (DT the) (JJ temporary) (NN buffer))))))) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NP (DT the) (NN order)) (SBAR (S (NP (PRP they)) (VP (VBD were) (VP (VBN added) (PP (TO to) (NP (DT the) (NN buffer))))))))) (-RRB- -RRB-))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_escaped_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character))))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_escaped_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_less_than_sign_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_dash_dash_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_less_than_sign_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state))))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VB Emit) (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character) (NN token))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_less_than_sign_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003C) (NNP LESS_THAN) (NNP SIGN) (NN character) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_state)))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+003E) (NNP GREATER_THAN) (NNP SIGN) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state))))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_script_html_comment_like_text) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escape_end_state))))) (. .) (VP (VB Emit) (NP (DT a) (NNP U+002F) (NNP SOLIDUS) (NN character) (NN token)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (SBAR (IN If) (S (NP (DT the) (JJ temporary) (NN buffer)) (VP (VBZ is) (NP (DT the) (VBG string) (`` ``) (NN script) ('' ''))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Script_data_escaped_state)))) (. .) (S (ADVP (NNP Otherwise)) (, ,) (VP (NN switch) (PP (TO to) (NP (DT the) (NNP Script_data_double_escaped_state)))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VP (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character))))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Script_data_double_escaped_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_equals_sign_before_attribute_name) (NN parse) (NN error))) (. .) (VP (VP (VB Start) (NP (DT a) (JJ new) (NN attribute)) (PP (IN in) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (VP (VP (VP (NNP Set) (NP (NP (IN that) (NN attribute) (POS 's)) (NN name)) (PP (TO to) (NP (DT the) (JJ current) (NN input) (NN character)))) (, ,)) (CC and) (VP (NP (PRP$ its) (NN value)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Attribute_name_state))))) (. .))
(S (VP (VP (VP (VB Start) (NP (DT a) (JJ new) (NN attribute)) (PP (IN in) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (VP (NNP Set) (NP (IN that) (NN attribute) (NN name) (CC and) (NN value)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Attribute_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP After_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_value_state)))) (. .))
(S (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN name)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN name))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_attribute_name) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_attribute_name) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_attribute_name) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN name)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_value_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (VP (VP (VP (VB Start) (NP (DT a) (JJ new) (NN attribute)) (PP (IN in) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .) (VP (NNP Set) (NP (IN that) (NN attribute) (NN name) (CC and) (NN value)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Attribute_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Attribute_value_double_quoted_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Attribute_value_single_quoted_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJ missing_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Attribute_value_unquoted_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_attribute_value_quoted_state)))) (. .))
(S (VP (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (TO to) (NP (DT the) (NNP Attribute_value_double_quoted_state)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Character_reference_state))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_attribute_value_quoted_state)))) (. .))
(S (VP (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (TO to) (NP (DT the) (NNP Attribute_value_single_quoted_state)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Character_reference_state))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (VP (VB Set) (NP (DT the) (NN return) (NN state)) (PP (TO to) (NP (DT the) (NNP Attribute_value_unquoted_state)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Character_reference_state))))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_unquoted_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_unquoted_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_unquoted_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_unquoted_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_in_unquoted_attribute_value) (NN parse) (NN error))) (. .) (VP (VB Treat) (NP (PRP it)) (PP (IN as) (PP (IN per) (NP (NP (DT the) (`` ``) (ADJP (NN anything) (JJ else)) ('' '') (NN entry)) (ADVP (IN below))))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_attribute_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Self_closing_start_tag_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_between_attributes) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Before_attribute_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VP (NNP Set) (NP (NP (DT the) (JJ self_closing) (NN flag)) (PP (IN of) (NP (DT the) (JJ current) (NN tag) (NN token))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NN tag) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_tag) (NN parse) (NN error))) (. .) (S (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_solidus_in_tag) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Before_attribute_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (NNP Emit) (NP (DT the) (NN comment) (NN token)))) (. .))
(S (VP (VP (NNP Emit) (NP (DT the) (NN comment))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .))
(SBAR (SBAR (IN If) (S (NP (DT the) (JJ next) (JJ few) (NNS characters)) (VP (VBP are)))) (: :))
(S (VP (VP (NNP Consume) (NP (DT those) (CD two) (NNS characters))) (, ,) (VP (VBP create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NN data)) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string))))))) (, ,) (CC and) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP Comment_start_state))))) (. .))
(S (VP (VP (NNP Consume) (NP (DT those) (NNS characters))) (CC and) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_state))))) (. .))
(S (S (VP (NNP Consume) (NP (DT those) (NNS characters)))) (. .) (NP (SBAR (SBAR (SBAR (IN If) (S (S (NP (EX there)) (VP (VBZ is) (NP (DT an) (JJ adjusted) (JJ current) (NN node)))) (CC and) (S (NP (PRP it)) (VP (VBZ is) (RB not) (NP (NP (DT an) (NN element)) (PP (IN in) (NP (DT the) (NNP HTML) (NN namespace)))))))) (, ,) (ADVP (ADVP (RB then)) (VP (VP (VB switch) (PP (TO to) (NP (DT the) (NNP CDATA_section_state)))) (. .) (ADVP (RB Otherwise))))) (, ,) (NP (DT this)))) (VP (VP (VBZ is) (NP (NP (DT a) (JJ cdata_in_html_content) (NN parse) (NN error)) (. .) (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NN data)) (S (VP (VBZ is) (NP (DT the) (`` ``) (JJ -LSB-) (NNP CDATA) (NNP -LSB-) (`` ``) (NN string))))))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Bogus_comment_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ incorrectly_opened_comment) (NN parse) (NN error))) (. .) (VP (VB Create) (NP (NP (DT a) (NN comment) (NN token)) (SBAR (WHNP (WP$ whose) (NN data)) (S (VP (VBZ is) (NP (DT the) (JJ empty) (NN string)))))))) (. .) (VP (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Bogus_comment_state)))) (PRN (-LRB- -LRB-) (S (VP (VBP do) (RB n't) (VP (VB consume) (NP (NN anything)) (PP (IN in) (NP (DT the) (JJ current) (NN state)))))) (-RRB- -RRB-)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_start_dash_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_closing_of_empty_comment) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (DT the) (NN comment) (NN token)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_end_state))))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_closing_of_empty_comment) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (DT the) (NN comment) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_comment) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (NN comment) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character)) (PRN (-LRB- -LRB-) (JJ _) (-RRB- -RRB-))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Comment_less_than_sign_state))))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_end_dash_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_comment) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (NN comment) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Comment_less_than_sign_bang_state))))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_less_than_sign_bang_dash_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_less_than_sign_bang_dash_dash_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_end_dash_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_end_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_end_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ nested_comment) (NN parse) (NN error))) (. .) (S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_end_state)))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_end_state))))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_comment) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (NN comment) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (VB Append) (NP (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character)) (PRN (-LRB- -LRB-) (JJ _) (-RRB- -RRB-))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (NNP Emit) (NP (DT the) (NN comment) (NN token)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Comment_end_bang_state)))) (. .))
(S (VP (VB Append) (NP (NP (DT a) (NNP U+002D) (NNP HYPHEN_MINUS) (NN character)) (PRN (-LRB- -LRB-) (JJ _) (-RRB- -RRB-))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_comment) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (NN comment) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NNP Append) (NP (NP (CD two) (NNP U+002D) (NNP HYPHEN_MINUS) (NNS characters)) (PRN (-LRB- -LRB-) (NP (NN _)) (-RRB- -RRB-))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NNP Append) (NP (NP (NP (CD two) (NNP U+002D) (NNP HYPHEN_MINUS) (NNS characters)) (PRN (-LRB- -LRB-) (NP (NN _)) (-RRB- -RRB-))) (CC and) (NP (NP (DT a) (NNP U+0021) (NNP EXCLAMATION) (NNP MARK) (NN character)) (PRN (-LRB- -LRB-) (NP (JJ _EXC_)) (-RRB- -RRB-)))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Comment_end_dash_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ incorrectly_closed_comment) (NN parse) (NN error))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (DT the) (NN comment) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_comment) (NN parse) (NN error))) (. .) (VP (VB Emit) (NP (DT the) (NN comment) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (NNP Append) (NP (NP (NP (CD two) (NNP U+002D) (NNP HYPHEN_MINUS) (NNS characters)) (PRN (-LRB- -LRB-) (NN _) (-RRB- -RRB-))) (CC and) (NP (NP (DT a) (NNP U+0021) (NNP EXCLAMATION) (NNP MARK) (NN character)) (PRN (-LRB- -LRB-) (. !) (-RRB- -RRB-)))) (PP (TO to) (NP (NP (DT the) (NN comment) (NN token) (POS 's)) (NNS data)))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Comment_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_name_state)))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Before_DOCTYPE_name_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VB Set) (NP (PRP$ its) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Emit) (NP (DT the) (NN token))))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_before_doctype_name) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Before_DOCTYPE_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NN token) (POS 's)) (NN name)) (PP (TO to) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_name_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VB Set) (NP (NP (DT the) (NN token) (POS 's)) (NN name)) (PP (TO to) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_name_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJ missing_doctype_name) (NN parse) (NN error))) (. .) (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VB Set) (NP (PRP$ its) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))))) (. .) (VP (NNP Emit) (NP (DT the) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VB Set) (NP (PRP$ its) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Emit) (NP (DT the) (NN token))))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VP (VP (VB Create) (NP (DT a) (JJ new) (NNP DOCTYPE) (NN token))) (. .) (VP (VB Set) (NP (NP (DT the) (NN token) (POS 's)) (NN name)) (PP (TO to) (NP (DT the) (JJ current) (NN input) (NN character))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_name_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_name_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_name_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token)))) (. .))
(S (VP (VB Append) (NP (NP (DT the) (JJ lowercase) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PRN (-LRB- -LRB-) (S (VP (VB add) (NP (CD 0x0020)) (PP (TO to) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN name)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN name))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN name)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (SBAR (IN If) (S (NP (NP (DT the) (CD six) (NNS characters)) (VP (VBG starting) (PP (IN from) (NP (DT the) (JJ current) (NN input) (NN character))))) (VP (VBP are) (NP (NP (DT an) (NNP ASCII) (JJ case_insensitive) (NN match)) (PP (IN for) (NP (DT the) (NN word) (`` ``) (NNP PUBLIC) ('' ''))))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VP (VP (VP (VP (VP (VP (VBP consume) (NP (DT those) (NNS characters))) (CC and) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_public_keyword_state))))) (. .) (ADVP (RB Otherwise))) (, ,) (SBAR (IN if) (S (NP (NP (DT the) (CD six) (NNS characters)) (VP (VBG starting) (PP (IN from) (NP (DT the) (JJ current) (NN input) (NN character))))) (VP (VBP are) (NP (NP (DT an) (NNP ASCII) (JJ case_insensitive) (NN match)) (PP (IN for) (NP (DT the) (NN word) (`` ``) (NNP SYSTEM) ('' '')))))))) (, ,) (ADVP (RB then)) (VP (VP (VBP consume) (NP (DT those) (NNS characters))) (CC and) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_system_keyword_state)))))) (. .) (ADVP (RB Otherwise))) (, ,) (NP (DT this)) (VP (VBZ is) (NP (DT an) (JJ invalid_character_sequence_after_doctype_name) (NN parse) (NN error)))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_public_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_public_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_public_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_public_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_after_doctype_public_keyword) (NN parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_public_identifier_double_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_after_doctype_public_keyword) (NN parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_public_identifier_single_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_doctype_public_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_public_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_public_identifier_double_quoted_state))))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_public_identifier_single_quoted_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_doctype_public_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_public_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_public_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_doctype_public_identifier) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_public_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_doctype_public_identifier) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (JJ public) (NN identifier)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Between_DOCTYPE_public_and_system_identifiers_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Between_DOCTYPE_public_and_system_identifiers_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Between_DOCTYPE_public_and_system_identifiers_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Between_DOCTYPE_public_and_system_identifiers_state)))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (NNS missing_whitespace_between_doctype_public_and_system_identifiers) (JJ parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_double_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (NNS missing_whitespace_between_doctype_public_and_system_identifiers) (JJ parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_single_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token)))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_double_quoted_state))))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_single_quoted_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_system_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_system_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_system_identifier_state)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Before_DOCTYPE_system_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_after_doctype_system_keyword) (NN parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_double_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (JJ missing_whitespace_after_doctype_system_keyword) (NN parse) (NN error))) (. .) (VP (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_single_quoted_state)))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_double_quoted_state))))) (. .))
(S (VP (VP (NNP Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)) (PP (TO to) (NP (NP (DT the) (JJ empty) (NN string)) (PRN (-LRB- -LRB-) (ADJP (RB not) (VBG missing)) (-RRB- -RRB-))))) (, ,) (ADVP (RB then)) (VP (VB switch) (PP (TO to) (NP (DT the) (NNP DOCTYPE_system_identifier_single_quoted_state))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT a) (JJR missing_quote_before_doctype_system_identifier) (JJ parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_system_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_doctype_system_identifier) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP After_DOCTYPE_system_identifier_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (VB Append) (NP (DT a) (NNP U+FFFD) (NNP REPLACEMENT) (NNP CHARACTER) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier))))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ abrupt_doctype_system_identifier) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Data_state))))) (. .) (VP (NNP Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token) (POS 's)) (NN system) (NN identifier)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (VB Emit) (NP (DT the) (JJ current) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_doctype) (NN parse) (NN error))) (. .) (VP (VB Set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))) (. .) (VP (NN Emit) (NP (IN that) (NNP DOCTYPE) (NN token)))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_character_after_doctype_system_identifier) (NN parse) (NN error))) (. .) (S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Bogus_DOCTYPE_state)))))) (. .) (-LRB- -LRB-) (S (NP (DT This)) (VP (VBZ does) (RB not) (VP (VB set) (NP (NP (DT the) (NNP DOCTYPE) (NN token) (POS 's)) (NNS force_quirks) (VBP flag)) (PP (TO to) (ADJP (IN on))))))) (. .) (-RRB- -RRB-))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .) (VP (NNP Emit) (NP (DT the) (NNP DOCTYPE) (NN token)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unexpected_null_character) (NN parse) (NN error))) (. .) (VP (IN Ignore) (NP (DT the) (NN character)))) (. .))
(S (VP (VP (NNP Emit) (NP (DT the) (NNP DOCTYPE) (NN token))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (IN Ignore) (NP (DT the) (NN character))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP CDATA_section_bracket_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ eof_in_cdata) (NN parse) (NN error))) (. .) (VP (NNP Emit) (NP (DT an) (NN end_of_file) (NN token)))) (. .))
(S (VP (VB Emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP CDATA_section_end_state)))) (. .))
(S (VP (VP (VB Emit) (NP (DT a) (NNP U+005D) (NNP RIGHT) (NNP SQUARE) (NNP BRACKET) (NN character) (NN token))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP CDATA_section_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VB Emit) (NP (DT a) (NNP U+005D) (NNP RIGHT) (NNP SQUARE) (NNP BRACKET) (NN character) (NN token))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Data_state)))) (. .))
(S (VP (VP (NNP Emit) (NP (CD two) (NNP U+005D) (NNP RIGHT) (NNP SQUARE) (NNP BRACKET) (NN character) (NNS tokens))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP CDATA_section_state))))) (. .))
(S (VP (VP (VP (VB Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string)))) (. .) (VP (VB Append) (NP (DT a) (NNP U+0026) (NNP AMPERSAND) (PRN (-LRB- -LRB-) (CC &) (RB amp) (: ;) (-RRB- -RRB-)) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))))) (. .) (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character)))) (: :))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Named_character_reference_state)))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Numeric_character_reference_state))))) (. .))
(S (VP (VP (NP (NNP Flush) (NP (NN code) (NNS points))) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NN return) (NN state))))) (. .))
(S (VP (VP (VB Consume) (NP (NP (DT the) (JJ maximum) (NN number)) (PP (IN of) (NP (NNS characters))) (ADJP (JJ possible))) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (JJ consumed) (NNS characters)) (VP (VBP are) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS identifiers)) (PP (IN in) (NP (NP (DT the) (JJ first) (NN column)) (PP (IN of) (NP (DT the) (VBN named) (NN character) (NNS references) (JJ table)))))))))))) (. .) (VP (VB Append) (NP (DT each) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer))) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ 's) (VP (VBN consumed))))))) (. .))
(S (SBAR (IN If) (S (S (NP (DT the) (NN character) (NN reference)) (VP (VBD was) (VP (VBN consumed) (PP (IN as) (NP (NP (NN part)) (PP (IN of) (NP (DT an) (NN attribute)))))))) (, ,) (CC and) (S (NP (NP (DT the) (JJ last) (NN character)) (VP (VBD matched))) (VP (VP (VBZ is) (RB not) (NP (DT a) (NNP U+003B) (NNP SEMICOLON) (NN character))) (-LRB- -LRB-) (: ;) (-RRB- -RRB-))) (, ,) (CC and) (S (NP (DT the) (JJ next) (NN input) (NN character)) (VP (VBZ is) (NP (CC either) (NP (NP (DT a) (NNP U+003D) (NNP EQUALS) (NNP SIGN) (NN character)) (PRN (-LRB- -LRB-) (JJ =) (-RRB- -RRB-))) (CC or) (NP (DT an) (NNP ASCII) (NN alphanumeric))))))) (, ,) (ADVP (RB then)) (, ,) (PP (IN for) (NP (JJ historical) (NNS reasons))) (, ,) (VP (VP (VP (ADVP (VP (VP (VP (JJ flush) (NP (NP (NN code) (NNS points)) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference)))))) (CC and) (VP (NN switch) (PP (TO to) (NP (DT the) (NN return) (NN state))))) (. .) (ADVP (NN Otherwise))) (: :) (SBAR (IN If) (S (S (NP (NP (DT the) (JJ last) (NN character)) (VP (VBD matched))) (VP (VBZ is) (RB not) (NP (DT a) (NNP U+003B) (NNP SEMICOLON) (NN character)))) (-LRB- -LRB-) (: ;) (-RRB- -RRB-))) (, ,) (ADVP (RB then))) (NP (DT this)) (VP (VBZ is) (NP (NP (DT a) (NN missing_semicolon_after_character_reference) (NN parse)) (VP (VBD error.Set) (NP (DT the) (JJ temporary) (NN buffer)) (PP (TO to) (NP (DT the) (JJ empty) (NN string))))))) (. .) (VP (VB Append) (NP (NP (QP (CD one) (CC or) (CD two)) (NNS characters)) (VP (VBG corresponding) (PP (TO to) (NP (NP (DT the) (NN character) (NN reference) (NN name)) (PRN (-LRB- -LRB-) (SBAR (IN as) (S (VP (VBN given) (PP (IN by) (NP (NP (DT the) (JJ second) (NN column)) (PP (IN of) (NP (DT the) (VBN named) (NN character) (NNS references) (NN table)))))))) (-RRB- -RRB-))))))) (PP (PP (TO to) (NP (DT the) (JJ temporary))) (NN buffer.Flush) (NP (NP (NN code) (NNS points)) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference))))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NN return) (NN state))))) (. .))
(S (VP (VP (NNP Flush) (NP (NP (NN code) (NNS points)) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference)))))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Ambiguous_ampersand_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (SBAR (IN If) (S (NP (DT the) (NN character) (NN reference)) (VP (VBD was) (VP (VBN consumed) (PP (IN as) (NP (NP (NN part)) (PP (IN of) (NP (DT an) (NN attribute))))))))) (, ,) (ADVP (RB then)) (VP (VP (VP (VB append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (NP (DT the) (JJ current) (NN attribute) (POS 's)) (NN value)))) (. .) (ADVP (NNP Otherwise))) (, ,) (VP (VBP emit) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (IN as) (NP (DT a) (NN character) (NN token))))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT an) (JJ unknown_named_character_reference) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NN return) (NN state))))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NN return) (NN state)))) (. .))
(S (VP (NNP Set) (NP (DT the) (NN character) (NN reference) (NN code)) (PP (TO to) (NP (NP (CD zero)) (PRN (-LRB- -LRB-) (NP (CD 0)) (-RRB- -RRB-))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Hexadecimal_character_reference_start_state))))) (. .))
(S (VP (VP (VB Append) (NP (DT the) (JJ current) (NN input) (NN character)) (PP (TO to) (NP (DT the) (JJ temporary) (NN buffer)))) (. .) (VP (VB Switch) (PP (TO to) (NP (DT the) (NNP Hexadecimal_character_reference_start_state))))) (. .))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Decimal_character_reference_start_state)))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Hexadecimal_character_reference_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (NN absence_of_digits_in_numeric_character_reference) (NN parse) (NN error))) (. .) (S (NP (NNP Flush) (NN code) (NNS points)) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference)))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NN return) (NN state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Decimal_character_reference_state)))) (. .))
(S (NP (DT This)) (VP (VP (VP (VBZ is) (NP (DT an) (NN absence_of_digits_in_numeric_character_reference) (NN parse) (NN error))) (. .) (S (NP (NNP Flush) (NN code) (NNS points)) (VP (VBN consumed) (PP (IN as) (NP (DT a) (NN character) (NN reference)))))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NN return) (NN state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Multiply) (NP (DT the) (NN character) (NN reference) (NN code)) (PP (IN by) (NP (CD 16)))) (. .) (VP (VP (VB Add) (NP (NP (DT a) (JJ numeric) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character))))) (PRN (-LRB- -LRB-) (S (VP (JJ subtract) (NP (CD 0x0030)) (PP (IN from) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (NN character) (NN reference) (NN code)))) (. .))
(S (VP (NNP Multiply) (NP (DT the) (NN character) (NN reference) (NN code)) (PP (IN by) (NP (CD 16)))) (. .) (VP (VP (VB Add) (NP (NP (DT a) (JJ numeric) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PP (IN as) (NP (DT a) (JJ hexadecimal) (NN digit)))) (PRN (-LRB- -LRB-) (S (VP (JJ subtract) (NP (CD 0x0037)) (PP (IN from) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (NN character) (NN reference) (NN code)))) (. .))
(S (VP (NNP Multiply) (NP (DT the) (NN character) (NN reference) (NN code)) (PP (IN by) (NP (CD 16)))) (. .) (VP (VP (VB Add) (NP (NP (DT a) (JJ numeric) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character)))) (PP (IN as) (NP (DT a) (JJ hexadecimal) (NN digit)))) (PRN (-LRB- -LRB-) (S (VP (JJ subtract) (NP (CD 0x0057)) (PP (IN from) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (NN character) (NN reference) (NN code)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Numeric_character_reference_end_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (NN missing_semicolon_after_character_reference) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Numeric_character_reference_end_state))))) (. .))
(S (VP (VB Consume) (NP (DT the) (JJ next) (NN input) (NN character))) (: :))
(S (VP (NNP Multiply) (NP (DT the) (NN character) (NN reference) (NN code)) (PP (IN by) (NP (CD 10)))) (. .) (VP (VP (VB Add) (NP (NP (DT a) (JJ numeric) (NN version)) (PP (IN of) (NP (DT the) (JJ current) (NN input) (NN character))))) (PRN (-LRB- -LRB-) (S (VP (JJ subtract) (NP (CD 0x0030)) (PP (IN from) (NP (NP (DT the) (NN character) (POS 's)) (NN code) (NN point))))) (-RRB- -RRB-)) (PP (TO to) (NP (DT the) (NN character) (NN reference) (NN code)))) (. .))
(S (VP (NN Switch) (PP (TO to) (NP (DT the) (NNP Numeric_character_reference_end_state)))) (. .))
(S (NP (DT This)) (VP (VP (VBZ is) (NP (DT a) (NN missing_semicolon_after_character_reference) (NN parse) (NN error))) (. .) (VP (NNP Reconsume) (PP (IN in) (NP (DT the) (NNP Numeric_character_reference_end_state))))) (. .))
