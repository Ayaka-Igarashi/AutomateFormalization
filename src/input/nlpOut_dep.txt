name:Data_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0026 AMPERSAND (&amp;)
0 set 0 root  1 the 3 det  2 return 3 compound  3 state 0 obj  4 to 6 case  5 the 6 det  6 Data_state 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Character_reference_state 0 obl  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Tag_open_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:EOF
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:RCDATA_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0026 AMPERSAND (&amp;)
0 set 0 root  1 the 3 det  2 return 3 compound  3 state 0 obj  4 to 6 case  5 the 6 det  6 RCDATA_state 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Character_reference_state 0 obl  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 RCDATA_less_than_sign_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:RAWTEXT_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 RAWTEXT_less_than_sign_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_less_than_sign_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:PLAINTEXT_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0021 EXCLAMATION MARK (!)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Markup_declaration_open_state 0 obl  
char:U+002F SOLIDUS (/)
0 switch 0 root  1 to 3 case  2 the 3 det  3 End_tag_open_state 0 obl  
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 start 5 compound  4 tag 5 compound  5 token 0 obj  6 and 7 cc  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Tag_name_state 0 nmod  
char:U+003F QUESTION MARK (?)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-question-mark-instead-of-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 3 det  2 comment 3 compound  3 token 0 obj  4 whose 5 nmod:poss  5 data 9 nsubj  6 is 9 cop  7 the 9 det  8 empty 9 amod  9 string 3 acl:relcl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_comment_state 0 nmod  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-before-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 10 cc  8 an 10 det  9 end-of-file 10 amod  10 token 6 conj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 invalid-first-character-of-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Data_state 0 nmod  

name:End_tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 end 5 compound  4 tag 5 compound  5 token 0 obj  6 , 7 punct  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Tag_name_state 0 nmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-end-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-before-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 , 12 punct  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 11 compound  11 character 12 compound  12 token 6 appos  13 and 16 cc  14 an 16 det  15 end-of-file 16 amod  16 token 6 conj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 invalid-first-character-of-tag-name 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 3 det  2 comment 3 compound  3 token 0 obj  4 whose 5 nmod:poss  5 data 9 nsubj  6 is 9 cop  7 the 9 det  8 empty 9 amod  9 string 3 acl:relcl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_comment_state 0 nmod  

name:Tag_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+002F SOLIDUS (/)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Self_closing_start_tag_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 26 case  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 26 nmod:poss  24 's 23 case  25 tag 26 compound  26 name 10 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 13 case  7 the 10 det  8 current 10 amod  9 tag 10 compound  10 token 13 nmod:poss  11 's 10 case  12 tag 13 compound  13 name 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 tag 9 compound  9 token 12 nmod:poss  10 's 9 case  11 tag 12 compound  12 name 0 obl  

name:RCDATA_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002F SOLIDUS (/)
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 RCDATA_end_tag_open_state 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RCDATA_state 0 nmod  

name:RCDATA_end_tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 end 5 compound  4 tag 5 compound  5 token 0 obj  6 , 7 punct  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RCDATA_end_tag_name_state 0 nmod  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 12 cc  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RCDATA_state 0 nmod  

name:RCDATA_end_tag_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000A LINE FEED (LF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000C FORM FEED (FF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+0020 SPACE
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+002F SOLIDUS (/)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Self_closing_start_tag_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Data_state 14 obl  18 and 19 cc  19 emit 14 conj  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 19 obj  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 26 case  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 26 nmod:poss  24 's 23 case  25 tag 26 compound  26 name 10 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 tag 9 compound  9 token 12 nmod:poss  10 's 9 case  11 tag 12 compound  12 name 0 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 , 12 punct  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  13 , 17 punct  14 and 17 cc  15 a 17 det  16 character 17 compound  17 token 6 conj  18 for 19 case  19 each 17 nmod  20 of 22 case  21 the 22 det  22 characters 19 nmod  23 in 26 case  24 the 26 det  25 temporary 26 amod  26 buffer 22 nmod  27 ( 30 punct  28 in 30 case  29 the 30 det  30 order 26 nmod  31 they 33 nsubj:pass  32 were 33 aux:pass  33 added 30 acl:relcl  34 to 36 case  35 the 36 det  36 buffer 33 obl  37 ) 30 punct  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RCDATA_state 0 nmod  

name:RAWTEXT_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002F SOLIDUS (/)
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 RAWTEXT_end_tag_open_state 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RAWTEXT_state 0 nmod  

name:RAWTEXT_end_tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 end 5 compound  4 tag 5 compound  5 token 0 obj  6 , 7 punct  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RAWTEXT_end_tag_name_state 0 nmod  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 12 cc  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RAWTEXT_state 0 nmod  

name:RAWTEXT_end_tag_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000A LINE FEED (LF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000C FORM FEED (FF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+0020 SPACE
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+002F SOLIDUS (/)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Self_closing_start_tag_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Data_state 14 obl  18 and 19 cc  19 emit 14 conj  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 19 obj  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 26 case  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 26 nmod:poss  24 's 23 case  25 tag 26 compound  26 name 10 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 tag 9 compound  9 token 12 nmod:poss  10 's 9 case  11 tag 12 compound  12 name 0 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 , 12 punct  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  13 , 17 punct  14 and 17 cc  15 a 17 det  16 character 17 compound  17 token 6 conj  18 for 19 case  19 each 17 nmod  20 of 22 case  21 the 22 det  22 characters 19 nmod  23 in 26 case  24 the 26 det  25 temporary 26 amod  26 buffer 22 nmod  27 ( 30 punct  28 in 30 case  29 the 30 det  30 order 26 nmod  31 they 33 nsubj:pass  32 were 33 aux:pass  33 added 30 acl:relcl  34 to 36 case  35 the 36 det  36 buffer 33 obl  37 ) 30 punct  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 RAWTEXT_state 0 nmod  

name:Script_data_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002F SOLIDUS (/)
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_end_tag_open_state 0 obl  
char:U+0021 EXCLAMATION MARK (!)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escape_start_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 13 cc  8 a 13 det  9 U+0021 13 nummod  10 EXCLAMATION 11 compound  11 MARK 13 compound  12 character 13 compound  13 token 6 conj  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_state 0 nmod  

name:Script_data_end_tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 end 5 compound  4 tag 5 compound  5 token 0 obj  6 , 7 punct  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_end_tag_name_state 0 nmod  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 12 cc  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_state 0 nmod  

name:Script_data_end_tag_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000A LINE FEED (LF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000C FORM FEED (FF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+0020 SPACE
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+002F SOLIDUS (/)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Self_closing_start_tag_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Data_state 14 obl  18 and 19 cc  19 emit 14 conj  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 19 obj  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 26 case  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 26 nmod:poss  24 's 23 case  25 tag 26 compound  26 name 10 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 tag 9 compound  9 token 12 nmod:poss  10 's 9 case  11 tag 12 compound  12 name 0 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 , 12 punct  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  13 , 17 punct  14 and 17 cc  15 a 17 det  16 character 17 compound  17 token 6 conj  18 for 19 case  19 each 17 nmod  20 of 22 case  21 the 22 det  22 characters 19 nmod  23 in 26 case  24 the 26 det  25 temporary 26 amod  26 buffer 22 nmod  27 ( 30 punct  28 in 30 case  29 the 30 det  30 order 26 nmod  31 they 33 nsubj:pass  32 were 33 aux:pass  33 added 30 acl:relcl  34 to 36 case  35 the 36 det  36 buffer 33 obl  37 ) 30 punct  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_state 0 nmod  

name:Script_data_escape_start_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escape_start_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_state 0 nmod  

name:Script_data_escape_start_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_dash_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_state 0 nmod  

name:Script_data_escaped_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_less_than_sign_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_escaped_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_dash_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_less_than_sign_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_escaped_dash_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_less_than_sign_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+003E 0 obj  
0 gREATER-THAN 1 amod  1 SIGN 3 compound  2 character 3 compound  3 token 3 root  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_escaped_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002F SOLIDUS (/)
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_escaped_end_tag_open_state 0 obl  
char:ASCII alpha
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_double_escape_start_state 0 nmod  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_escaped_state 0 nmod  

name:Script_data_escaped_end_tag_open_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alpha
0 create 0 root  1 a 5 det  2 new 5 amod  3 end 5 compound  4 tag 5 compound  5 token 0 obj  6 , 7 punct  7 set 0 conj  8 its 10 nmod:poss  9 tag 10 compound  10 name 7 obj  11 to 14 case  12 the 14 det  13 empty 14 amod  14 string 7 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_escaped_end_tag_name_state 0 nmod  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 and 12 cc  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_escaped_state 0 nmod  

name:Script_data_escaped_end_tag_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000A LINE FEED (LF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+000C FORM FEED (FF)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+0020 SPACE
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Before_attribute_name_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+002F SOLIDUS (/)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Self_closing_start_tag_state 14 obl  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 11 mark  1 the 5 det  2 current 5 amod  3 end 5 compound  4 tag 5 compound  5 token 11 nsubj  6 is 11 cop  7 an 11 det  8 appropriate 11 amod  9 end 11 compound  10 tag 11 compound  11 token 14 advcl  12 , 14 punct  13 then 14 advmod  14 switch 14 root  15 to 17 case  16 the 17 det  17 Data_state 14 obl  18 and 19 cc  19 emit 14 conj  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 19 obj  
0 otherwise 2 advmod  1 , 2 punct  2 treat 2 root  3 it 2 obj  4 as 11 case  5 per 11 case  6 the 11 det  7 " 8 punct  8 anything 11 compound  9 else 8 amod  10 " 8 punct  11 entry 2 obl  12 below 11 advmod  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 26 case  20 the 23 det  21 current 23 amod  22 tag 23 compound  23 token 26 nmod:poss  24 's 23 case  25 tag 26 compound  26 name 10 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 tag 9 compound  9 token 12 nmod:poss  10 's 9 case  11 tag 12 compound  12 name 0 obl  
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
char:Anything else
0 emit 0 root  1 a 6 det  2 U+003C 6 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  7 , 12 punct  8 a 12 det  9 U+002F 12 nummod  10 SOLIDUS 12 compound  11 character 12 compound  12 token 6 conj  13 , 17 punct  14 and 17 cc  15 a 17 det  16 character 17 compound  17 token 6 conj  18 for 19 case  19 each 17 nmod  20 of 22 case  21 the 22 det  22 characters 19 nmod  23 in 26 case  24 the 26 det  25 temporary 26 amod  26 buffer 22 nmod  27 ( 30 punct  28 in 30 case  29 the 30 det  30 order 26 nmod  31 they 33 nsubj:pass  32 were 33 aux:pass  33 added 30 acl:relcl  34 to 36 case  35 the 36 det  36 buffer 33 obl  37 ) 30 punct  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_escaped_state 0 nmod  

name:Script_data_double_escape_start_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+000A LINE FEED (LF)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+000C FORM FEED (FF)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+0020 SPACE
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+002F SOLIDUS (/)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_double_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 22 case  20 the 22 det  21 temporary 22 amod  22 buffer 10 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_escaped_state 0 nmod  

name:Script_data_double_escaped_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_less_than_sign_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_double_escaped_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_dash_dash_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_less_than_sign_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_double_escaped_dash_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 emit 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 2 compound  2 token 2 root  
char:U+003C LESS-THAN SIGN (&lt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_less_than_sign_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+003C 4 nummod  3 LESS-THAN 6 amod  4 SIGN 6 compound  5 character 6 compound  6 token 0 obj  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_state 0 obl  
0 emit 0 root  1 a 2 det  2 U+003E 0 obj  
0 gREATER-THAN 1 amod  1 SIGN 3 compound  2 character 3 compound  3 token 3 root  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 obl  
0 emit 0 root  1 a 6 det  2 U+FFFD 6 compound  3 REPLACEMENT 4 compound  4 CHARACTER 6 compound  5 character 6 compound  6 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-script-html-comment-like-text 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:Script_data_double_escaped_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002F SOLIDUS (/)
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Script_data_double_escape_end_state 0 obl  
0 emit 0 root  1 a 5 det  2 U+002F 5 nummod  3 SOLIDUS 5 compound  4 character 5 compound  5 token 0 obj  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 nmod  

name:Script_data_double_escape_end_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+000A LINE FEED (LF)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+000C FORM FEED (FF)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+0020 SPACE
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+002F SOLIDUS (/)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 if 7 mark  1 the 3 det  2 temporary 3 amod  3 buffer 7 nsubj  4 is 7 cop  5 the 7 det  6 string 7 compound  7 "script" 10 advcl  8 , 10 punct  9 then 10 advmod  10 switch 10 root  11 to 13 case  12 the 13 det  13 Script_data_escaped_state 10 obl  
0 otherwise 2 advmod  1 , 2 punct  2 switch 2 root  3 to 5 case  4 the 5 det  5 Script_data_double_escaped_state 2 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 22 case  20 the 22 det  21 temporary 22 amod  22 buffer 10 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:ASCII lower alpha
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Script_data_double_escaped_state 0 nmod  

name:Before_attribute_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+002F SOLIDUS (/)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:EOF
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+003D EQUALS SIGN (=)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-equals-sign-before-attribute-name 5 amod  4 parse 5 compound  5 error 5 root  
0 start 0 root  1 a 3 det  2 new 3 amod  3 attribute 0 obj  4 in 8 case  5 the 8 det  6 current 8 amod  7 tag 8 compound  8 token 3 nmod  
0 set 0 root  1 that 2 det  2 attribute 4 nmod:poss  3 's 2 case  4 name 0 obj  5 to 9 case  6 the 9 det  7 current 9 amod  8 input 9 compound  9 character 0 obl  10 , 13 punct  11 and 13 cc  12 its 13 nmod:poss  13 value 4 conj  14 to 17 case  15 the 17 det  16 empty 17 amod  17 string 13 nmod  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Attribute_name_state 0 obl  
char:Anything else
0 start 0 root  1 a 3 det  2 new 3 amod  3 attribute 0 obj  4 in 8 case  5 the 8 det  6 current 8 amod  7 tag 8 compound  8 token 3 nmod  
0 set 0 root  1 that 3 det  2 attribute 3 compound  3 name 0 obj  4 and 5 cc  5 value 3 conj  6 to 9 case  7 the 9 det  8 empty 9 amod  9 string 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Attribute_name_state 0 nmod  

name:Attribute_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+000A LINE FEED (LF)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+000C FORM FEED (FF)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+0020 SPACE
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+002F SOLIDUS (/)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+003E GREATER-THAN SIGN (&gt;)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:EOF
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 After_attribute_name_state 0 nmod  
char:U+003D EQUALS SIGN (=)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_value_state 0 obl  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 24 case  20 the 22 det  21 current 22 amod  22 attribute 24 nmod:poss  23 's 22 case  24 name 10 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 current 9 amod  9 attribute 11 nmod:poss  10 's 9 case  11 name 0 obl  
char:U+0022 QUOTATION MARK (")
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-attribute-name 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+0027 APOSTROPHE (')
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-attribute-name 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+003C LESS-THAN SIGN (&lt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-attribute-name 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 current 8 amod  8 attribute 10 nmod:poss  9 's 8 case  10 name 0 obl  

name:After_attribute_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+002F SOLIDUS (/)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Self_closing_start_tag_state 0 obl  
char:U+003D EQUALS SIGN (=)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_value_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 start 0 root  1 a 3 det  2 new 3 amod  3 attribute 0 obj  4 in 8 case  5 the 8 det  6 current 8 amod  7 tag 8 compound  8 token 3 nmod  
0 set 0 root  1 that 3 det  2 attribute 3 compound  3 name 0 obj  4 and 5 cc  5 value 3 conj  6 to 9 case  7 the 9 det  8 empty 9 amod  9 string 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Attribute_name_state 0 nmod  

name:Before_attribute_value_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0022 QUOTATION MARK (")
0 switch 0 root  1 to 3 case  2 the 3 det  3 Attribute_value_double_quoted_state 0 obl  
char:U+0027 APOSTROPHE (')
0 switch 0 root  1 to 3 case  2 the 3 det  3 Attribute_value_single_quoted_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Attribute_value_unquoted_state 0 nmod  

name:Attribute_value_double_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0022 QUOTATION MARK (")
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_attribute_value_quoted_state 0 obl  
char:U+0026 AMPERSAND (&amp;)
0 set 0 root  1 the 3 det  2 return 3 compound  3 state 0 obj  4 to 6 case  5 the 6 det  6 Attribute_value_double_quoted_state 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Character_reference_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 current 9 amod  9 attribute 11 nmod:poss  10 's 9 case  11 value 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 current 8 amod  8 attribute 10 nmod:poss  9 's 8 case  10 value 0 obl  

name:Attribute_value_single_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0027 APOSTROPHE (')
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_attribute_value_quoted_state 0 obl  
char:U+0026 AMPERSAND (&amp;)
0 set 0 root  1 the 3 det  2 return 3 compound  3 state 0 obj  4 to 6 case  5 the 6 det  6 Attribute_value_single_quoted_state 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Character_reference_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 current 9 amod  9 attribute 11 nmod:poss  10 's 9 case  11 value 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 current 8 amod  8 attribute 10 nmod:poss  9 's 8 case  10 value 0 obl  

name:Attribute_value_unquoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+0026 AMPERSAND (&amp;)
0 set 0 root  1 the 3 det  2 return 3 compound  3 state 0 obj  4 to 6 case  5 the 6 det  6 Attribute_value_unquoted_state 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Character_reference_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 current 9 amod  9 attribute 11 nmod:poss  10 's 9 case  11 value 0 obl  
char:U+0022 QUOTATION MARK (")
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-unquoted-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+0027 APOSTROPHE (')
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-unquoted-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+003C LESS-THAN SIGN (&lt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-unquoted-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+003D EQUALS SIGN (=)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-unquoted-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:U+0060 GRAVE ACCENT (`)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-in-unquoted-attribute-value 5 amod  4 parse 5 compound  5 error 5 root  
0 treat 0 root  1 it 0 obj  2 as 9 case  3 per 9 case  4 the 9 det  5 " 6 punct  6 anything 9 compound  7 else 6 amod  8 " 6 punct  9 entry 0 obl  10 below 9 advmod  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 current 8 amod  8 attribute 10 nmod:poss  9 's 8 case  10 value 0 obl  

name:After_attribute_value_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_attribute_name_state 0 obl  
char:U+002F SOLIDUS (/)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Self_closing_start_tag_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-between-attributes 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Before_attribute_name_state 0 nmod  

name:Self_closing_start_tag_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003E GREATER-THAN SIGN (&gt;)
0 set 0 root  1 the 3 det  2 self-closing 3 compound  3 flag 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 tag 8 compound  8 token 3 nmod  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 tag 4 compound  4 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-solidus-in-tag 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Before_attribute_name_state 0 nmod  

name:Bogus_comment_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
char:EOF
0 emit 0 root  1 the 2 det  2 comment 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 comment 9 compound  9 token 11 nmod:poss  10 's 9 case  11 data 0 obl  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 0 obl  

name:Markup_declaration_open_state
prev:
0 if 5 mark  1 the 4 det  2 next 4 amod  3 few 4 amod  4 characters 5 nsubj  5 are 5 root  
trans:
char:Two U+002D HYPHEN-MINUS characters (-)
0 consume 0 root  1 those 3 det  2 two 3 nummod  3 characters 0 obj  4 , 5 punct  5 create 0 conj  6 a 8 det  7 comment 8 compound  8 token 5 obj  9 whose 10 nmod:poss  10 data 14 nsubj  11 is 14 cop  12 the 14 det  13 empty 14 amod  14 string 8 acl:relcl  15 , 17 punct  16 and 17 cc  17 switch 0 conj  18 to 20 case  19 the 20 det  20 Comment_start_state 17 obl  
char:ASCII case-insensitive match for the word "DOCTYPE"
0 consume 0 root  1 those 2 det  2 characters 0 obj  3 and 4 cc  4 switch 0 conj  5 to 7 case  6 the 7 det  7 DOCTYPE_state 4 obl  
char:The string "[CDATA[" (the five uppercase letters "CDATA" with a U+005B LEFT SQUARE BRACKET character before and after)
0 consume 0 root  1 those 2 det  2 characters 0 obj  
0 if 2 mark  1 there 2 expl  2 is 19 advcl  3 an 6 det  4 adjusted 6 amod  5 current 6 amod  6 node 2 nsubj  7 and 12 cc  8 it 12 nsubj  9 is 12 cop  10 not 12 advmod  11 an 12 det  12 element 2 conj  13 in 16 case  14 the 16 det  15 HTML 16 compound  16 namespace 12 nmod  17 , 19 punct  18 then 19 advmod  19 switch 19 root  20 to 22 case  21 the 22 det  22 CDATA_section_state 19 obl  
0 otherwise 7 advmod  1 , 7 punct  2 this 7 nsubj  3 is 7 cop  4 a 7 det  5 cdata-in-html-content 7 amod  6 parse 7 compound  7 error 7 root  
0 create 0 root  1 a 3 det  2 comment 3 compound  3 token 0 obj  4 whose 5 nmod:poss  5 data 13 nsubj  6 is 13 cop  7 the 13 det  8 " 13 punct  9 [ 10 punct  10 CDATA 13 compound  11 [ 10 punct  12 " 10 punct  13 string 3 acl:relcl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Bogus_comment_state 0 obl  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 incorrectly-opened-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 3 det  2 comment 3 compound  3 token 0 obj  4 whose 5 nmod:poss  5 data 9 nsubj  6 is 9 cop  7 the 9 det  8 empty 9 amod  9 string 3 acl:relcl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Bogus_comment_state 0 obl  4 ( 7 punct  5 do 7 aux  6 n't 7 advmod  7 consume 0 parataxis  8 anything 7 obj  9 in 12 case  10 the 12 det  11 current 12 amod  12 state 8 nmod  13 ) 7 punct  

name:Comment_start_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_start_dash_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-closing-of-empty-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_start_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_end_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-closing-of-empty-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 1 nmod  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003C LESS-THAN SIGN (&lt;)
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_less_than_sign_state 0 obl  
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_end_dash_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 11 case  7 the 9 det  8 comment 9 compound  9 token 11 nmod:poss  10 's 9 case  11 data 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 0 obl  

name:Comment_less_than_sign_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0021 EXCLAMATION MARK (!)
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_less_than_sign_bang_state 0 obl  
char:U+003C LESS-THAN SIGN (&lt;)
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_less_than_sign_bang_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_less_than_sign_bang_dash_state 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_less_than_sign_bang_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_less_than_sign_bang_dash_dash_state 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_end_dash_state 0 nmod  

name:Comment_less_than_sign_bang_dash_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003E GREATER-THAN SIGN (&gt;)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_end_state 0 nmod  
char:EOF
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_end_state 0 nmod  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 nested-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_end_state 0 nmod  

name:Comment_end_dash_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_end_state 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 1 nmod  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_end_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
char:U+0021 EXCLAMATION MARK (!)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_end_bang_state 0 obl  
char:U+002D HYPHEN-MINUS (-)
0 append 0 root  1 a 2 det  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 character 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 1 nmod  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 two 2 nummod  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 characters 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 to 10 case  6 the 8 det  7 comment 8 compound  8 token 10 nmod:poss  9 's 8 case  10 data 1 nmod  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:Comment_end_bang_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+002D HYPHEN-MINUS (-)
0 append 0 root  1 two 2 nummod  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 characters 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 and 10 cc  6 a 10 det  7 U+0021 9 nummod  8 EXCLAMATION 9 compound  9 MARK 10 compound  10 character 1 conj  11 ( 12 punct  12 -EXC- 10 appos  13 ) 12 punct  14 to 19 case  15 the 17 det  16 comment 17 compound  17 token 19 nmod:poss  18 's 17 case  19 data 10 nmod  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Comment_end_dash_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 incorrectly-closed-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-comment 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 the 3 det  2 comment 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 two 2 nummod  2 U+002D 0 obj  
0 hYPHEN-MINUS 1 amod  1 characters 1 root  2 ( 1 punct  3 - 1 punct  4 ) 1 punct  5 and 9 cc  6 a 10 det  7 U+0021 9 nummod  8 EXCLAMATION 9 compound  9 MARK 1 conj  10 character 1 conj  11 ( 1 punct  12 ! 10 punct  13 ) 1 punct  14 to 19 case  15 the 17 det  16 comment 17 compound  17 token 19 nmod:poss  18 's 17 case  19 data 1 nmod  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Comment_state 0 nmod  

name:DOCTYPE_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 nmod  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 its 3 nmod:poss  2 force-quirks 3 compound  3 flag 0 obj  4 to 5 case  5 on 0 obl  
0 emit 0 root  1 the 2 det  2 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-before-doctype-name 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Before_DOCTYPE_name_state 0 nmod  

name:Before_DOCTYPE_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:ASCII upper alpha
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 the 2 det  2 token 4 nmod:poss  3 's 2 case  4 name 0 obj  5 to 8 case  6 the 8 det  7 lowercase 8 amod  8 version 0 obl  9 of 13 case  10 the 13 det  11 current 13 amod  12 input 13 compound  13 character 8 nmod  14 ( 15 punct  15 add 0 parataxis  16 0x0020 15 obj  17 to 22 case  18 the 19 det  19 character 22 nmod:poss  20 's 19 case  21 code 22 compound  22 point 15 obl  23 ) 15 punct  
0 switch 0 root  1 to 3 case  2 the 3 det  3 DOCTYPE_name_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 the 2 det  2 token 4 nmod:poss  3 's 2 case  4 name 0 obj  5 to 10 case  6 a 10 det  7 U+FFFD 10 compound  8 REPLACEMENT 10 compound  9 CHARACTER 10 compound  10 character 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 DOCTYPE_name_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-doctype-name 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 its 3 nmod:poss  2 force-quirks 3 compound  3 flag 0 obj  4 to 5 case  5 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 2 det  2 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 its 3 nmod:poss  2 force-quirks 3 compound  3 flag 0 obj  4 to 5 case  5 on 0 obl  
0 emit 0 root  1 the 2 det  2 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 create 0 root  1 a 4 det  2 new 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
0 set 0 root  1 the 2 det  2 token 4 nmod:poss  3 's 2 case  4 name 0 obj  5 to 9 case  6 the 9 det  7 current 9 amod  8 input 9 compound  9 character 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 DOCTYPE_name_state 0 obl  

name:DOCTYPE_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_name_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_name_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_name_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_name_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
char:ASCII upper alpha
0 append 0 root  1 the 3 det  2 lowercase 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 add 0 parataxis  11 0x0020 10 obj  12 to 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 25 case  20 the 23 det  21 current 23 amod  22 DOCTYPE 23 compound  23 token 25 nmod:poss  24 's 23 case  25 name 10 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 12 case  7 the 10 det  8 current 10 amod  9 DOCTYPE 10 compound  10 token 12 nmod:poss  11 's 10 case  12 name 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 11 case  6 the 9 det  7 current 9 amod  8 DOCTYPE 9 compound  9 token 11 nmod:poss  10 's 9 case  11 name 0 obl  

name:After_DOCTYPE_name_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 if 14 mark  1 the 3 det  2 six 3 nummod  3 characters 14 nsubj  4 starting 3 acl  5 from 9 case  6 the 9 det  7 current 9 amod  8 input 9 compound  9 character 4 obl  10 are 14 cop  11 an 14 det  12 ASCII 14 compound  13 case-insensitive 14 amod  14 match 23 advcl  15 for 17 case  16 the 17 det  17 word 14 nmod  18 " 19 punct  19 PUBLIC 17 appos  20 " 19 punct  21 , 23 punct  22 then 23 advmod  23 consume 23 root  24 those 25 det  25 characters 23 obj  26 and 27 cc  27 switch 23 conj  28 to 30 case  29 the 30 det  30 After_DOCTYPE_public_keyword_state 27 obl  
0 otherwise 25 advmod  1 , 25 punct  2 if 16 mark  3 the 5 det  4 six 5 nummod  5 characters 16 nsubj  6 starting 5 acl  7 from 11 case  8 the 11 det  9 current 11 amod  10 input 11 compound  11 character 6 obl  12 are 16 cop  13 an 16 det  14 ASCII 16 compound  15 case-insensitive 16 amod  16 match 25 advcl  17 for 19 case  18 the 19 det  19 word 16 nmod  20 " 21 punct  21 SYSTEM 19 appos  22 " 21 punct  23 , 25 punct  24 then 25 advmod  25 consume 25 root  26 those 27 det  27 characters 25 obj  28 and 29 cc  29 switch 25 conj  30 to 32 case  31 the 32 det  32 After_DOCTYPE_system_keyword_state 29 obl  
0 otherwise 7 advmod  1 , 7 punct  2 this 7 nsubj  3 is 7 cop  4 an 7 det  5 invalid-character-sequence-after-doctype-name 7 amod  6 parse 7 compound  7 error 7 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:After_DOCTYPE_public_keyword_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_public_identifier_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_public_identifier_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_public_identifier_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_public_identifier_state 0 obl  
char:U+0022 QUOTATION MARK (")
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-after-doctype-public-keyword 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 public 6 amod  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_public_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-after-doctype-public-keyword 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 public 6 amod  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_public_identifier_single_quoted_state 17 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:Before_DOCTYPE_public_identifier_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0022 QUOTATION MARK (")
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 public 6 amod  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_public_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 public 6 amod  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_public_identifier_single_quoted_state 17 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:DOCTYPE_public_identifier_double_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0022 QUOTATION MARK (")
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_public_identifier_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 13 case  7 the 10 det  8 current 10 amod  9 DOCTYPE 10 compound  10 token 13 nmod:poss  11 's 10 case  12 public 13 amod  13 identifier 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 DOCTYPE 9 compound  9 token 12 nmod:poss  10 's 9 case  11 public 12 amod  12 identifier 0 obl  

name:DOCTYPE_public_identifier_single_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0027 APOSTROPHE (')
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_public_identifier_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 13 case  7 the 10 det  8 current 10 amod  9 DOCTYPE 10 compound  10 token 13 nmod:poss  11 's 10 case  12 public 13 amod  13 identifier 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-doctype-public-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 DOCTYPE 9 compound  9 token 12 nmod:poss  10 's 9 case  11 public 12 amod  12 identifier 0 obl  

name:After_DOCTYPE_public_identifier_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Between_DOCTYPE_public_and_system_identifiers_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Between_DOCTYPE_public_and_system_identifiers_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Between_DOCTYPE_public_and_system_identifiers_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Between_DOCTYPE_public_and_system_identifiers_state 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
char:U+0022 QUOTATION MARK (")
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-between-doctype-public-and-system-identifiers 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-between-doctype-public-and-system-identifiers 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_single_quoted_state 17 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:Between_DOCTYPE_public_and_system_identifiers_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
char:U+0022 QUOTATION MARK (")
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_single_quoted_state 17 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:After_DOCTYPE_system_keyword_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_system_identifier_state 0 obl  
char:U+000A LINE FEED (LF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_system_identifier_state 0 obl  
char:U+000C FORM FEED (FF)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_system_identifier_state 0 obl  
char:U+0020 SPACE
0 switch 0 root  1 to 3 case  2 the 3 det  3 Before_DOCTYPE_system_identifier_state 0 obl  
char:U+0022 QUOTATION MARK (")
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-after-doctype-system-keyword 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-whitespace-after-doctype-system-keyword 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_single_quoted_state 17 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:Before_DOCTYPE_system_identifier_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0022 QUOTATION MARK (")
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_double_quoted_state 17 obl  
char:U+0027 APOSTROPHE (')
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 system 6 compound  6 identifier 0 obj  7 to 10 case  8 the 10 det  9 empty 10 amod  10 string 0 obl  11 ( 13 punct  12 not 13 advmod  13 missing 10 appos  14 ) 13 punct  15 , 17 punct  16 then 17 advmod  17 switch 0 conj  18 to 20 case  19 the 20 det  20 DOCTYPE_system_identifier_single_quoted_state 17 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-quote-before-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  

name:DOCTYPE_system_identifier_double_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0022 QUOTATION MARK (")
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_system_identifier_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 13 case  7 the 10 det  8 current 10 amod  9 DOCTYPE 10 compound  10 token 13 nmod:poss  11 's 10 case  12 system 13 compound  13 identifier 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 DOCTYPE 9 compound  9 token 12 nmod:poss  10 's 9 case  11 system 12 compound  12 identifier 0 obl  

name:DOCTYPE_system_identifier_single_quoted_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0027 APOSTROPHE (')
0 switch 0 root  1 to 3 case  2 the 3 det  3 After_DOCTYPE_system_identifier_state 0 obl  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 append 0 root  1 a 5 det  2 U+FFFD 3 compound  3 REPLACEMENT 4 compound  4 CHARACTER 5 compound  5 character 0 obj  6 to 13 case  7 the 10 det  8 current 10 amod  9 DOCTYPE 10 compound  10 token 13 nmod:poss  11 's 10 case  12 system 13 compound  13 identifier 0 obl  
char:U+003E GREATER-THAN SIGN (&gt;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 abrupt-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 12 case  6 the 9 det  7 current 9 amod  8 DOCTYPE 9 compound  9 token 12 nmod:poss  10 's 9 case  11 system 12 compound  12 identifier 0 obl  

name:After_DOCTYPE_system_identifier_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+0009 CHARACTER TABULATION (tab)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000A LINE FEED (LF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+000C FORM FEED (FF)
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+0020 SPACE
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 4 det  2 current 4 amod  3 DOCTYPE 4 compound  4 token 0 obj  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-doctype 5 amod  4 parse 5 compound  5 error 5 root  
0 set 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 6 nmod:poss  4 's 3 case  5 force-quirks 6 compound  6 flag 0 obj  7 to 8 case  8 on 0 obl  
0 emit 0 root  1 that 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-character-after-doctype-system-identifier 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Bogus_DOCTYPE_state 0 nmod  
0 ( 4 punct  1 This 4 nsubj  2 does 4 aux  3 not 4 advmod  4 set 4 root  5 the 7 det  6 DOCTYPE 7 compound  7 token 10 nmod:poss  8 's 7 case  9 force-quirks 10 compound  10 flag 4 obj  11 to 12 case  12 on 4 obl  13 . 4 punct  14 ) 4 punct  

name:Bogus_DOCTYPE_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+003E GREATER-THAN SIGN (&gt;)
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
0 emit 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
char:U+0000 NULL
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unexpected-null-character 5 amod  4 parse 5 compound  5 error 5 root  
0 ignore 0 root  1 the 2 det  2 character 0 obj  
char:EOF
0 emit 0 root  1 the 3 det  2 DOCTYPE 3 compound  3 token 0 obj  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 ignore 0 root  1 the 2 det  2 character 0 obj  

name:CDATA_section_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+005D RIGHT SQUARE BRACKET (])
0 switch 0 root  1 to 3 case  2 the 3 det  3 CDATA_section_bracket_state 0 obl  
char:EOF
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 eof-in-cdata 5 amod  4 parse 5 compound  5 error 5 root  
0 emit 0 root  1 an 3 det  2 end-of-file 3 amod  3 token 0 obj  
char:Anything else
0 emit 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 as 8 case  6 a 8 det  7 character 8 compound  8 token 0 obl  

name:CDATA_section_bracket_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+005D RIGHT SQUARE BRACKET (])
0 switch 0 root  1 to 3 case  2 the 3 det  3 CDATA_section_end_state 0 obl  
char:Anything else
0 emit 0 root  1 a 7 det  2 U+005D 7 nummod  3 RIGHT 7 amod  4 SQUARE 7 compound  5 BRACKET 7 compound  6 character 7 compound  7 token 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 CDATA_section_state 0 nmod  

name:CDATA_section_end_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:U+005D RIGHT SQUARE BRACKET (])
0 emit 0 root  1 a 7 det  2 U+005D 7 nummod  3 RIGHT 7 amod  4 SQUARE 7 compound  5 BRACKET 7 compound  6 character 7 compound  7 token 0 obj  
char:U+003E GREATER-THAN SIGN character
0 switch 0 root  1 to 3 case  2 the 3 det  3 Data_state 0 obl  
char:Anything else
0 emit 0 root  1 two 7 nummod  2 U+005D 7 nummod  3 RIGHT 7 amod  4 SQUARE 7 compound  5 BRACKET 7 compound  6 character 7 compound  7 tokens 0 obj  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 CDATA_section_state 0 nmod  

name:Character_reference_state
prev:
0 set 0 root  1 the 3 det  2 temporary 3 amod  3 buffer 0 obj  4 to 7 case  5 the 7 det  6 empty 7 amod  7 string 0 obl  
0 append 0 root  1 a 8 det  2 U+0026 3 nummod  3 AMPERSAND 0 obj  4 ( 3 punct  5 & 6 cc  6 amp 3 conj  7 ;) 8 compound  8 character 3 conj  9 to 12 case  10 the 12 det  11 temporary 12 amod  12 buffer 8 nmod  
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alphanumeric
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Named_character_reference_state 0 nmod  
char:U+0023 NUMBER SIGN (#)
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Numeric_character_reference_state 0 obl  
char:Anything else
0 flush 0 root  1 code 2 compound  2 points 0 obj  3 consumed 2 acl  4 as 7 case  5 a 7 det  6 character 7 compound  7 reference 3 obl  
0 reconsume 0 root  1 in 4 case  2 the 4 det  3 return 4 compound  4 state 0 nmod  

name:Named_character_reference_state
prev:
0 consume 0 root  1 the 3 det  2 maximum 3 amod  3 number 0 obj  4 of 5 case  5 characters 3 nmod  6 possible 5 amod  7 , 13 punct  8 where 13 mark  9 the 11 det  10 consumed 11 amod  11 characters 13 nsubj  12 are 13 cop  13 one 0 advcl  14 of 16 case  15 the 16 det  16 identifiers 13 nmod  17 in 20 case  18 the 20 det  19 first 20 amod  20 column 16 nmod  21 of 26 case  22 the 26 det  23 named 26 amod  24 character 25 compound  25 references 26 compound  26 table 20 nmod  
0 append 0 root  1 each 2 det  2 character 0 obj  3 to 6 case  4 the 6 det  5 temporary 6 amod  6 buffer 0 obl  7 when 10 mark  8 it 10 nsubj:pass  9 's 10 aux:pass  10 consumed 0 advcl  
trans:
char:If there is a match
0 if 5 mark  1 the 3 det  2 character 3 compound  3 reference 5 nsubj:pass  4 was 5 aux:pass  5 consumed 22 advcl  6 as 7 case  7 part 5 obl  8 of 10 case  9 an 10 det  10 attribute 7 nmod  11 , 22 punct  12 and 22 cc  13 the 15 det  14 last 15 amod  15 character 22 nsubj  16 matched 15 acl  17 is 22 cop  18 not 22 advmod  19 a 22 det  20 U+003B 22 nummod  21 SEMICOLON 22 compound  22 character 22 root  23 ( 24 punct  24 ;) 22 discourse  25 , 37 punct  26 and 37 cc  27 the 30 det  28 next 30 amod  29 input 30 compound  30 character 37 nsubj  31 is 37 cop  32 either 37 cc:preconj  33 a 37 det  34 U+003D 35 nummod  35 EQUALS 37 compound  36 SIGN 37 compound  37 character 22 conj  38 ( 39 punct  39 =) 37 appos  40 or 43 cc  41 an 43 det  42 ASCII 43 compound  43 alphanumeric 39 conj  44 , 37 punct  45 then 51 advmod  46 , 45 punct  47 for 49 case  48 historical 49 amod  49 reasons 51 obl  50 , 51 punct  51 flush 22 parataxis  52 code 53 compound  53 points 51 obj  54 consumed 53 acl  55 as 58 case  56 a 58 det  57 character 58 compound  58 reference 54 obl  59 and 60 cc  60 switch 58 conj  61 to 64 case  62 the 64 det  63 return 64 compound  64 state 58 nmod  
0 Otherwise 22 advmod  1 : 22 punct  2 If 6 mark  3 the 5 det  4 last 5 amod  5 character 6 nsubj  6 matched 12 csubj  7 is 12 cop  8 not 12 advmod  9 a 12 det  10 U+003B 12 nummod  11 SEMICOLON 12 compound  12 character 22 advcl  13 ( 21 punct  14 ;) 22 discourse  15 , 21 punct  16 then 21 advmod  17 this 21 nsubj  18 is 21 cop  19 a 21 det  20 missing-semicolon-after-character-reference 21 amod  21 parse 22 nsubj  22 error.Set 22 root  23 the 25 det  24 temporary 25 amod  25 buffer 22 obj  26 to 29 case  27 the 29 det  28 empty 29 amod  29 string 25 nmod  
0 append 0 root  1 one 4 nummod  2 or 3 cc  3 two 1 conj  4 characters 0 obj  5 corresponding 4 acl  6 to 10 case  7 the 10 det  8 character 9 compound  9 reference 10 compound  10 name 5 obl  11 ( 13 punct  12 as 13 mark  13 given 5 advcl  14 by 17 case  15 the 17 det  16 second 17 amod  17 column 13 obl  18 of 23 case  19 the 23 det  20 named 23 amod  21 character 22 compound  22 references 23 compound  23 table 17 nmod  24 ) 13 punct  25 to 30 case  26 the 30 det  27 temporary 30 amod  28 buffer.Flush 30 compound  29 code 30 compound  30 points 5 obl  31 consumed 30 acl  32 as 35 case  33 a 35 det  34 character 35 compound  35 reference 31 obl  
0 switch 0 root  1 to 4 case  2 the 4 det  3 return 4 compound  4 state 0 obl  
char:Otherwise
0 flush 0 root  1 code 2 compound  2 points 0 obj  3 consumed 2 acl  4 as 7 case  5 a 7 det  6 character 7 compound  7 reference 3 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Ambiguous_ampersand_state 0 obl  

name:Ambiguous_ampersand_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII alphanumeric
0 if 5 mark  1 the 3 det  2 character 3 compound  3 reference 5 nsubj:pass  4 was 5 aux:pass  5 consumed 13 advcl  6 as 7 case  7 part 5 obl  8 of 10 case  9 an 10 det  10 attribute 7 nmod  11 , 5 punct  12 then 13 advmod  13 append 13 root  14 the 17 det  15 current 17 amod  16 input 17 compound  17 character 13 obj  18 to 23 case  19 the 21 det  20 current 21 amod  21 attribute 23 nmod:poss  22 's 21 case  23 value 13 obl  
0 otherwise 2 advmod  1 , 2 punct  2 emit 2 root  3 the 6 det  4 current 6 amod  5 input 6 compound  6 character 2 obj  7 as 10 case  8 a 10 det  9 character 10 compound  10 token 2 obl  
char:U+003B SEMICOLON (;)
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 unknown-named-character-reference 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 4 case  2 the 4 det  3 return 4 compound  4 state 0 nmod  
char:Anything else
0 reconsume 0 root  1 in 4 case  2 the 4 det  3 return 4 compound  4 state 0 nmod  

name:Numeric_character_reference_state
prev:
0 set 0 root  1 the 4 det  2 character 4 compound  3 reference 4 compound  4 code 0 obj  5 to 6 case  6 zero 4 nmod  7 ( 8 punct  8 0).Consume 0 parataxis  9 the 12 det  10 next 12 amod  11 input 12 compound  12 character 8 obj  
trans:
char:U+0078 LATIN SMALL LETTER X
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Hexadecimal_character_reference_start_state 0 obl  
char:U+0058 LATIN CAPITAL LETTER X
0 append 0 root  1 the 4 det  2 current 4 amod  3 input 4 compound  4 character 0 obj  5 to 8 case  6 the 8 det  7 temporary 8 amod  8 buffer 0 obl  
0 switch 0 root  1 to 3 case  2 the 3 det  3 Hexadecimal_character_reference_start_state 0 obl  
char:Anything else
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Decimal_character_reference_start_state 0 nmod  

name:Hexadecimal_character_reference_start_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII hex digit
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Hexadecimal_character_reference_state 0 nmod  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 absence-of-digits-in-numeric-character-reference 5 amod  4 parse 5 compound  5 error 5 root  
0 flush 0 root  1 code 2 compound  2 points 0 obj  3 consumed 2 acl  4 as 7 case  5 a 7 det  6 character 7 compound  7 reference 3 obl  
0 reconsume 0 root  1 in 4 case  2 the 4 det  3 return 4 compound  4 state 0 nmod  

name:Decimal_character_reference_start_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII digit
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Decimal_character_reference_state 0 nmod  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 an 5 det  3 absence-of-digits-in-numeric-character-reference 5 amod  4 parse 5 compound  5 error 5 root  
0 flush 0 root  1 code 2 compound  2 points 0 obj  3 consumed 2 acl  4 as 7 case  5 a 7 det  6 character 7 compound  7 reference 3 obl  
0 reconsume 0 root  1 in 4 case  2 the 4 det  3 return 4 compound  4 state 0 nmod  

name:Hexadecimal_character_reference_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII digit
0 multiply 0 root  1 the 4 det  2 character 4 compound  3 reference 4 compound  4 code 0 obj  5 by 6 case  6 16 0 obl  
0 add 0 root  1 a 3 det  2 numeric 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 subtract 0 parataxis  11 0x0030 10 obj  12 from 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 23 case  20 the 23 det  21 character 23 compound  22 reference 23 compound  23 code 10 obl  
char:ASCII upper hex digit
0 multiply 0 root  1 the 4 det  2 character 4 compound  3 reference 4 compound  4 code 0 obj  5 by 6 case  6 16 0 obl  
0 add 0 root  1 a 3 det  2 numeric 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 as 12 case  10 a 12 det  11 hexadecimal 12 amod  12 digit 0 obl  13 ( 14 punct  14 subtract 0 parataxis  15 0x0037 14 obj  16 from 21 case  17 the 18 det  18 character 21 nmod:poss  19 's 18 case  20 code 21 compound  21 point 14 obl  22 ) 14 punct  23 to 27 case  24 the 27 det  25 character 27 compound  26 reference 27 compound  27 code 14 obl  
char:ASCII lower hex digit
0 multiply 0 root  1 the 4 det  2 character 4 compound  3 reference 4 compound  4 code 0 obj  5 by 6 case  6 16 0 obl  
0 add 0 root  1 a 3 det  2 numeric 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 as 12 case  10 a 12 det  11 hexadecimal 12 amod  12 digit 0 obl  13 ( 14 punct  14 subtract 0 parataxis  15 0x0057 14 obj  16 from 21 case  17 the 18 det  18 character 21 nmod:poss  19 's 18 case  20 code 21 compound  21 point 14 obl  22 ) 14 punct  23 to 27 case  24 the 27 det  25 character 27 compound  26 reference 27 compound  27 code 14 obl  
char:U+003B SEMICOLON
0 switch 0 root  1 to 3 case  2 the 3 det  3 Numeric_character_reference_end_state 0 obl  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-semicolon-after-character-reference 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Numeric_character_reference_end_state 0 nmod  

name:Decimal_character_reference_state
prev:
0 consume 0 root  1 the 4 det  2 next 4 amod  3 input 4 compound  4 character 0 obj  
trans:
char:ASCII digit
0 multiply 0 root  1 the 4 det  2 character 4 compound  3 reference 4 compound  4 code 0 obj  5 by 6 case  6 10 0 obl  
0 add 0 root  1 a 3 det  2 numeric 3 amod  3 version 0 obj  4 of 8 case  5 the 8 det  6 current 8 amod  7 input 8 compound  8 character 3 nmod  9 ( 10 punct  10 subtract 0 parataxis  11 0x0030 10 obj  12 from 17 case  13 the 14 det  14 character 17 nmod:poss  15 's 14 case  16 code 17 compound  17 point 10 obl  18 ) 10 punct  19 to 23 case  20 the 23 det  21 character 23 compound  22 reference 23 compound  23 code 10 obl  
char:U+003B SEMICOLON
0 switch 0 root  1 to 3 case  2 the 3 det  3 Numeric_character_reference_end_state 0 obl  
char:Anything else
0 this 5 nsubj  1 is 5 cop  2 a 5 det  3 missing-semicolon-after-character-reference 5 amod  4 parse 5 compound  5 error 5 root  
0 reconsume 0 root  1 in 3 case  2 the 3 det  3 Numeric_character_reference_end_state 0 nmod  

