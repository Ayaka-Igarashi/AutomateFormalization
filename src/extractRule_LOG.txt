===========start============

------------------
rule: 
term: 
VP(VB(switch),PP(IN(to),NP(z0)))
------------------
add

------------------
rule: 
VP(VB(switch),PP(IN(to),NP(z0)))
term: 
VP(VB(switch),PP(IN(to),NP(Before_attribute_name_state(det(the)))))
------------------
no change2
fin

===========start============

------------------
rule: 
term: 
VP(VB(set),NP(flag(nmod:poss(token(det(the),compound(DOCTYPE),case('s))),compound(force-quirks))),PP(IN(to),ADVP(RP(on))))
------------------
add

------------------
rule: 
VP(VB(set),NP(flag(nmod:poss(token(det(the),compound(DOCTYPE),case('s))),compound(force-quirks))),PP(IN(to),ADVP(RP(on))))
term: 
VP(X0)
------------------
leafCount == 0

------------------
rule: 
VP(VB(set),NP(flag(nmod:poss(token(det(the),compound(DOCTYPE),case('s))),compound(force-quirks))),PP(IN(to),ADVP(RP(on))))
term: 
VP(VB(set),NP(z0),PP(IN(to),NP(string(X1))))
------------------
add

------------------
rule: 
VP(VB(set),NP(flag(nmod:poss(token(det(the),compound(DOCTYPE),case('s))),compound(force-quirks))),PP(IN(to),ADVP(RP(on))))
VP(VB(set),NP(z0),PP(IN(to),NP(string(X1))))
term: 
VP(VB(set),NP(z0),PP(IN(to),z1))
------------------
children: 
VP(VB(set),NP(flag(nmod:poss(token(det(the),compound(DOCTYPE),case('s))),compound(force-quirks))),PP(IN(to),ADVP(RP(on))))
VP(VB(set),NP(z0),PP(IN(to),NP(string(X1))))

------------------
rule: 
VP(VB(set),NP(z0),PP(IN(to),z1))
term: 
VP(VB(set),NP(z0),PP(IN(to),NP(z1)))
------------------
no change2
fin

===========start============

------------------
rule: 
term: 
VP(VB(create),NP(token(X0)))
------------------
add

------------------
rule: 
VP(VB(create),NP(token(X0)))
term: 
VP(VB(create),NP(token(det(a),z0,z1)))
------------------
no change2

------------------
rule: 
VP(VB(create),NP(token(X0)))
term: 
VP(VB(create),NP(token(det(a),amod(new),compound(DOCTYPE))))
------------------
no change2

------------------
rule: 
VP(VB(create),NP(token(X0)))
term: 
VP(VB(create),NP(token(det(a),amod(new),compound(end),compound(tag))))
------------------
no change2
fin

===========start============

------------------
rule: 
term: 
VP(VB(reconsume),PP(IN(in),NP(z0)))
------------------
add
fin

===========start============

------------------
rule: 
term: 
VP(VB(multiply),NP(code(det(the),compound(reference(compound(character))))),PP(IN(by),NP(z0)))
------------------
add
fin

===========start============

------------------
rule: 
term: 
VP(VB(consume),NP(z0))
------------------
add

------------------
rule: 
VP(VB(consume),NP(z0))
term: 
VP(VB(consume),NP(character(det(the),amod(next),compound(input))))
------------------
no change2

------------------
rule: 
VP(VB(consume),NP(z0))
term: 
VP(X0)
------------------
leafCount == 0
fin

===========start============
fin

===========start============

------------------
rule: 
term: 
VP(VB(add),NP(version(X0)),PP(IN(to),NP(code(det(the),compound(reference(compound(character)))))))
------------------
add
fin

===========start============

------------------
rule: 
term: 
VP(VB(ignore),NP(character(det(the))))
------------------
add
fin

===========start============

------------------
rule: 
term: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
------------------
add

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(VB(append),NP(character(X0)),PP(IN(to),NP(name(X1))))
------------------
no change2

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(VB(append),NP(character(det(a),compound(U+FFFD),compound(REPLACEMENT),compound(CHARACTER))),PP(IN(to),NP(z0)))
------------------
no change2

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(VB(append),NP(character(X0)),PP(IN(to),NP(z1)))
------------------
no change2

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(X0)
------------------
leafCount == 0

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(VB(append),NP(character(det(the),amod(current),compound(input))),PP(IN(to),NP(z0)))
------------------
no change2

------------------
rule: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
term: 
VP(z0,z1,PP(IN(to),NP(z2)))
------------------
children: 
VP(VB(append),NP(z0),PP(IN(to),NP(z1)))
fin

===========start============

------------------
rule: 
term: 
VP(VBZ(is),NP(z0))
------------------
add

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
z0
------------------
leafCount == 0

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
VP(z0,z1)
------------------
leafCount == 0

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
VP(VBZ(is),NP(error(det(an),amod(z0),compound(parse))))
------------------
no change2

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
VP(X0)
------------------
leafCount == 0

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
VP(VBZ(is),NP(error(det(z0),amod(z1),compound(parse))))
------------------
no change2

------------------
rule: 
VP(VBZ(is),NP(z0))
term: 
VP(z0,NP(z1))
------------------
leafCount == 0
fin

===========start============

------------------
rule: 
term: 
VP(VB(emit),NP(token(det(z0),compound(z1))))
------------------
add

------------------
rule: 
VP(VB(emit),NP(token(det(z0),compound(z1))))
term: 
VP(VB(emit),NP(token(X0)))
------------------
children: 
VP(VB(emit),NP(token(det(z0),compound(z1))))

------------------
rule: 
VP(VB(emit),NP(token(X0)))
term: 
VP(VB(emit),NP(z0))
------------------
children: 
VP(VB(emit),NP(token(X0)))

------------------
rule: 
VP(VB(emit),NP(z0))
term: 
VP(X0)
------------------
leafCount == 0

------------------
rule: 
VP(VB(emit),NP(z0))
term: 
VP(VB(emit),NP(token(det(z0),z1)))
------------------
no change2

------------------
rule: 
VP(VB(emit),NP(z0))
term: 
VP(VB(emit),NP(token(det(that),compound(DOCTYPE))))
------------------
no change2

------------------
rule: 
VP(VB(emit),NP(z0))
term: 
VP(VB(emit),NP(character(det(the),amod(current),compound(input))),PP(IN(as),NP(token(det(a),compound(character)))))
------------------
add

------------------
rule: 
VP(VB(emit),NP(z0))
VP(VB(emit),NP(character(det(the),amod(current),compound(input))),PP(IN(as),NP(token(det(a),compound(character)))))
term: 
VP(VB(emit),NP(token(det(an),amod(end-of-file))))
------------------
no change2
fin

===========start============
fin

===========start============

------------------
rule: 
term: 
VP(VB(treat),NP(it),PP(IN(as),PP(IN(per),NP(entry(det(the),compound(anything(punct("),amod(else),punct("))),advmod(below))))))
------------------
add
fin

